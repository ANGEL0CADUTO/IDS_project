// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.31.1
// source: proto/inference.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Messaggio per la richiesta di inferenza
type InferenceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Features      []float32              `protobuf:"fixed32,1,rep,packed,name=features,proto3" json:"features,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferenceRequest) Reset() {
	*x = InferenceRequest{}
	mi := &file_proto_inference_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferenceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceRequest) ProtoMessage() {}

func (x *InferenceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inference_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceRequest.ProtoReflect.Descriptor instead.
func (*InferenceRequest) Descriptor() ([]byte, []int) {
	return file_proto_inference_proto_rawDescGZIP(), []int{0}
}

func (x *InferenceRequest) GetFeatures() []float32 {
	if x != nil {
		return x.Features
	}
	return nil
}

// Messaggio per la risposta di inferenza
type InferenceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// La predizione del modello (-1 per anomalia, 1 per normale)
	Prediction    int32 `protobuf:"varint,1,opt,name=prediction,proto3" json:"prediction,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InferenceResponse) Reset() {
	*x = InferenceResponse{}
	mi := &file_proto_inference_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InferenceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InferenceResponse) ProtoMessage() {}

func (x *InferenceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_inference_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InferenceResponse.ProtoReflect.Descriptor instead.
func (*InferenceResponse) Descriptor() ([]byte, []int) {
	return file_proto_inference_proto_rawDescGZIP(), []int{1}
}

func (x *InferenceResponse) GetPrediction() int32 {
	if x != nil {
		return x.Prediction
	}
	return 0
}

var File_proto_inference_proto protoreflect.FileDescriptor

const file_proto_inference_proto_rawDesc = "" +
	"\n" +
	"\x15proto/inference.proto\x12\x05proto\".\n" +
	"\x10InferenceRequest\x12\x1a\n" +
	"\bfeatures\x18\x01 \x03(\x02R\bfeatures\"3\n" +
	"\x11InferenceResponse\x12\x1e\n" +
	"\n" +
	"prediction\x18\x01 \x01(\x05R\n" +
	"prediction2I\n" +
	"\tInference\x12<\n" +
	"\aPredict\x12\x17.proto.InferenceRequest\x1a\x18.proto.InferenceResponseB+Z)github.com/ANGEL0CADUTO/IDS_project/protob\x06proto3"

var (
	file_proto_inference_proto_rawDescOnce sync.Once
	file_proto_inference_proto_rawDescData []byte
)

func file_proto_inference_proto_rawDescGZIP() []byte {
	file_proto_inference_proto_rawDescOnce.Do(func() {
		file_proto_inference_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_inference_proto_rawDesc), len(file_proto_inference_proto_rawDesc)))
	})
	return file_proto_inference_proto_rawDescData
}

var file_proto_inference_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_inference_proto_goTypes = []any{
	(*InferenceRequest)(nil),  // 0: proto.InferenceRequest
	(*InferenceResponse)(nil), // 1: proto.InferenceResponse
}
var file_proto_inference_proto_depIdxs = []int32{
	0, // 0: proto.Inference.Predict:input_type -> proto.InferenceRequest
	1, // 1: proto.Inference.Predict:output_type -> proto.InferenceResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_inference_proto_init() }
func file_proto_inference_proto_init() {
	if File_proto_inference_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_inference_proto_rawDesc), len(file_proto_inference_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_inference_proto_goTypes,
		DependencyIndexes: file_proto_inference_proto_depIdxs,
		MessageInfos:      file_proto_inference_proto_msgTypes,
	}.Build()
	File_proto_inference_proto = out.File
	file_proto_inference_proto_goTypes = nil
	file_proto_inference_proto_depIdxs = nil
}

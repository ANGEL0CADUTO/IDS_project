services:
  consul:
    image: consul:1.15
    platform: linux/amd64
    container_name: consul
    ports:
      - "8500:8500"
      - "8600:8600/udp"
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8500/v1/status/leader" ]
      interval: 5s
      timeout: 2s
      retries: 5
    networks:
      - ids-net

  inference:
    build:
      context: ./services/inference
    networks:
      - ids-net

    environment:
      - CONSUL_HOST=consul
      - CONSUL_PORT=8500
      - GRPC_PORT=5000

      - JAEGER_ADDR=jaeger:4317
    depends_on:
      consul:
        condition: service_healthy
      jaeger:
        condition: service_started
    healthcheck:
      test: [ "CMD", "/grpc_health_probe", "-addr=:5000" ]
      interval: 5s
      timeout: 1s
      retries: 3
      start_period: 10s

  collector:
    build:
      context: .
      dockerfile: services/collector/Dockerfile
    ports:
      - "50051:50051"
    environment:
      - CONSUL_ADDR=consul:8500
      - ANALYSIS_SERVICE_NAME=analysis-service
      - GRPC_PORT=50051
      - JAEGER_ADDR=jaeger:4317
    depends_on:
      analysis:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - ids-net

  analysis:
    build:
      context: .
      dockerfile: services/analysis/Dockerfile
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
    environment:
      - CONSUL_ADDR=consul:8500
      - STORAGE_SERVICE_NAME=storage-service
      - GRPC_PORT=50053
      - JAEGER_ADDR=jaeger:4317
      - INFERENCE_SERVICE_NAME=inference-service
      - ALARM_THRESHOLD=4       # Genera un allarme dopo 5 anomalie
      - ALARM_WINDOW_SECONDS=60 # ricevute in una finestra di 60 secondi.
      - FALLBACK_THRESHOLD=95.0
    depends_on:
      storage:
        condition: service_healthy
      consul:
        condition: service_healthy
      inference:
        condition: service_healthy
      jaeger:
        condition: service_started
    healthcheck:
      test: [ "CMD", "/grpc_health_probe", "-addr=:50053" ]
      interval: 10s
      timeout: 2s
      retries: 5
      start_period: 15s
    networks:
      - ids-net

  storage:
    build:
      context: .
      dockerfile: services/storage/Dockerfile
    environment:
      - CONSUL_ADDR=consul:8500
      - GRPC_PORT=50052
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=password123
      - INFLUXDB_ORG=ids-project
      - INFLUXDB_BUCKET=metrics
      - INFLUXDB_ALARMS_BUCKET=alarms
      - JAEGER_ADDR=jaeger:4317
    depends_on:
      influxdb:
        condition: service_started
      consul:
        condition: service_healthy
      jaeger:
        condition: service_started
    healthcheck:
      test: ["CMD", "/grpc_health_probe", "-addr=:50052"]
      interval: 10s
      timeout: 1s
      retries: 5
      start_period: 15s
    networks:
      - ids-net

  influxdb:
    image: influxdb:2.7
    container_name: influxdb
    ports:
      - "8086:8086"
    volumes:
      - influxdb-data:/var/lib/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=password1234
      - DOCKER_INFLUXDB_INIT_ORG=ids-project
      - DOCKER_INFLUXDB_INIT_BUCKET=metrics
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=password123
    networks:
      - ids-net

  grafana:
    image: grafana/grafana:latest
    platform: linux/amd64
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    depends_on:
      - influxdb
    networks:
      - ids-net

  jaeger:
    image: jaegertracing/all-in-one:1.53
    platform: linux/amd64
    container_name: jaeger
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
    networks:
      - ids-net
    environment:
      - COLLECTOR_OTLP_ENABLED=true
      - SPAN_STORAGE_TYPE=memory
      # Ho aumentato leggermente il lookback per vedere meglio le dipendenze
      - MEMORY_DEPENDENCY_LOOKBACK=4m

volumes:
  influxdb-data:
  grafana-data:

networks:
  ids-net:
    driver: bridge